
// function entriesFromExistingClub(selectedClub) {
//     const tempmessage = document.createElement('div');
//     tempmessage.innerHTML = `${selectedClub} was selected`
// }

// function entriesFromNewClub() {
//     const tempmessage = document.createElement('div');
//     tempmessage.innerHTML = `Make new club`
// }
//*///////////////////////////////////////////////////////////////////////////////////////////////////////

// Function to fetch and parse the JSON file
// async function fetchAndParseJSON(file) {
//     try {
//         const response = await fetch(file);
//         if (!response.ok) {
//             throw new Error(`HTTP error! status: ${response.status}`);
//         }
//         const data = await response.json();

//         // Extract necessary information
//         const club = data.club;
//         const teams = data.teams;
//         const horses = data.horses;
//         const riders = data.riders;

//         // Output the extracted data (for demonstration purposes)
//         console.log('Club:', club);
//         console.log('Teams:', teams);
//         console.log('Horses:', horses);
//         console.log('Riders:', riders);

//         // Return the extracted data if needed elsewhere
//         return { club, teams, horses, riders };
//     } catch (error) {
//         console.error('Error fetching or parsing the JSON file:', error);
//     }
// }

// Call the function with the path to your JSON file
//fetchAndParseJSON('大山乗馬センター_1234.json');


////////////////////////////////////////////////////////////////////////


// document.addEventListener("DOMContentLoaded", function() {
//     fetchAndParseJSON('大山乗馬センター_1234.json');
// });

// async function fetchAndParseJSON(file) {
//     try {
//         const response = await fetch(file);
//         if (!response.ok) {
//             throw new Error(`HTTP error! status: ${response.status}`);
//         }
//         const data = await response.json();

//         // Extract necessary information
//         const club = data.club;
//         const teams = data.teams;
//         const horses = data.horses;
//         const riders = data.riders;

//         // Call functions to display data in tables
//         displayClub(club);
//         displayTeams(teams);
//         displayHorses(horses);
//         displayRiders(riders);
//     } catch (error) {
//         console.error('Error fetching or parsing the JSON file:', error);
//     }
// }

// function displayClub(club) {
//     const tableContainer = document.getElementById('clubTableContainer');
//     let tableHTML = `<table><tr><th>Club Name</th><th>Registration Officer</th><th>Mobile</th><th>Phone</th><th>Email</th><th>Fax</th></tr>`;
//     club.forEach(c => {
//         tableHTML += `<tr><td>${c.clubName}</td><td>${c.registrationOfficer}</td><td>${c.mobile}</td><td>${c.phone}</td><td>${c.email}</td><td>${c.fax}</td></tr>`;
//     });
//     tableHTML += `</table>`;
//     tableContainer.innerHTML = tableHTML;
//     tableContainer.style.display = 'block';
// }

// function displayTeams(teams) {
//     const tableContainer = document.getElementById('teamsTableContainer');
//     let tableHTML = `<table><tr><th>Team Number</th><th>Team Name</th></tr>`;
//     teams.forEach(t => {
//         tableHTML += `<tr><td>${t.teamNumber}</td><td>${t.teamName}</td></tr>`;
//     });
//     tableHTML += `</table>`;
//     tableContainer.innerHTML = tableHTML;
//     tableContainer.style.display = 'block';
// }

// function displayHorses(horses) {
//     const tableContainer = document.getElementById('horsesTableContainer');
//     let tableHTML = `<table><tr><th>Horse Number</th><th>Horse Name</th><th>Horse Name Furigana</th><th>Horse Reg Number</th><th>Horse Sex</th><th>Horse Age</th><th>Horse Color</th><th>Horse Breed</th><th>Horse Origin</th><th>Horse Owner</th></tr>`;
//     horses.forEach(h => {
//         tableHTML += `<tr><td>${h.horseNumber}</td><td>${h.horseName}</td><td>${h.horseNameFurigana}</td><td>${h.horseRegNumber}</td><td>${h.horseSex}</td><td>${h.horseAge}</td><td>${h.horseColor}</td><td>${h.horseBreed}</td><td>${h.horseOrigin}</td><td>${h.horseOwner}</td></tr>`;
//     });
//     tableHTML += `</table>`;
//     tableContainer.innerHTML = tableHTML;
//     tableContainer.style.display = 'block';
// }

// function displayRiders(riders) {
//     const tableContainer = document.getElementById('ridersTableContainer');
//     let tableHTML = `<table><tr><th>Rider Number</th><th>Rider Name</th><th>Rider Name Furigana</th><th>Rider Reg Number</th><th>Rider Sex</th></tr>`;
//     riders.forEach(r => {
//         tableHTML += `<tr><td>${r.riderNumber}</td><td>${r.riderName}</td><td>${r.riderNameFurigana}</td><td>${r.riderRegNumber}</td><td>${r.riderSex}</td></tr>`;
//     });
//     tableHTML += `</table>`;
//     tableContainer.innerHTML = tableHTML;
//     tableContainer.style.display = 'block';
// }



//////////////

// async function fetchAndParseJSON(file) {
//     try {
//         const response = await fetch(file);
//         if (!response.ok) {
//             throw new Error(`HTTP error! status: ${response.status}`);
//         }
//         const data = await response.json();

//         // Extract necessary information
//         const club = data.club;
//         const teams = data.teams;
//         const horses = data.horses;
//         const riders = data.riders;

//         // Call functions to display data in tables
//         displayClub(club);
//         displayTeams(teams);
//         displayHorses(horses);
//         displayRiders(riders);
//     } catch (error) {
//         console.error('Error fetching or parsing the JSON file:', error);
//     }
// }

// function displayClub(club) {
//     const tableContainer = document.getElementById('clubTableContainer');
//     let tableHTML = `<table><tr><th>Club Name</th><th>Registration Officer</th><th>Mobile</th><th>Phone</th><th>Email</th><th>Fax</th></tr>`;
//     club.forEach(c => {
//         tableHTML += `<tr><td contenteditable="true">${c.clubName}</td><td contenteditable="true">${c.registrationOfficer}</td><td contenteditable="true">${c.mobile}</td><td contenteditable="true">${c.phone}</td><td contenteditable="true">${c.email}</td><td contenteditable="true">${c.fax}</td></tr>`;
//     });
//     tableHTML += `</table>`;
//     tableContainer.innerHTML = tableHTML;
//     tableContainer.style.display = 'block';
// }

// function displayTeams(teams) {
//     const tableContainer = document.getElementById('teamsTableContainer');
//     let tableHTML = `<table><tr><th>Team Number</th><th>Team Name</th></tr>`;
//     teams.forEach(t => {
//         tableHTML += `<tr><td contenteditable="true">${t.teamNumber}</td><td contenteditable="true">${t.teamName}</td></tr>`;
//     });
//     tableHTML += `</table>`;
//     tableContainer.innerHTML = tableHTML;
//     tableContainer.style.display = 'block';
// }

// function displayHorses(horses) {
//     const tableContainer = document.getElementById('horsesTableContainer');
//     let tableHTML = `<table><tr><th>Horse Number</th><th>Horse Name</th><th>Horse Name Furigana</th><th>Horse Reg Number</th><th>Horse Sex</th><th>Horse Age</th><th>Horse Color</th><th>Horse Breed</th><th>Horse Origin</th><th>Horse Owner</th></tr>`;
//     horses.forEach(h => {
//         tableHTML += `<tr><td contenteditable="true">${h.horseNumber}</td><td contenteditable="true">${h.horseName}</td><td contenteditable="true">${h.horseNameFurigana}</td><td contenteditable="true">${h.horseRegNumber}</td><td contenteditable="true">${h.horseSex}</td><td contenteditable="true">${h.horseAge}</td><td contenteditable="true">${h.horseColor}</td><td contenteditable="true">${h.horseBreed}</td><td contenteditable="true">${h.horseOrigin}</td><td contenteditable="true">${h.horseOwner}</td></tr>`;
//     });
//     tableHTML += `</table>`;
//     tableContainer.innerHTML = tableHTML;
//     tableContainer.style.display = 'block';
// }

// function displayRiders(riders) {
//     const tableContainer = document.getElementById('ridersTableContainer');
//     let tableHTML = `<table><tr><th>Rider Number</th><th>Rider Name</th><th>Rider Name Furigana</th><th>Rider Reg Number</th><th>Rider Sex</th></tr>`;
//     riders.forEach(r => {
//         tableHTML += `<tr><td contenteditable="true">${r.riderNumber}</td><td contenteditable="true">${r.riderName}</td><td contenteditable="true">${r.riderNameFurigana}</td><td contenteditable="true">${


//////////////////


////// 1532//////




// // document.addEventListener("DOMContentLoaded", function() {
// //     fetchAndParseJSON('大山乗馬センター_1234.json');
// // });

// async function fetchAndParseJSON(file) {
//     try {
//         const response = await fetch(file);
//         if (!response.ok) {
//             throw new Error(`HTTP error! status: ${response.status}`);
//         }
//         const data = await response.json();

//         // Extract necessary information
//         const club = data.club;
//         const teams = data.teams;
//         const horses = data.horses;
//         const riders = data.riders;

//         // Call functions to display data in tables
//         displayClub(club);
//         displayTeams(teams);
//         displayHorses(horses);
//         displayRiders(riders);
//     } catch (error) {
//         console.error('Error fetching or parsing the JSON file:', error);
//     }
// }

// function displayClub(club) {
//     const tableContainer = document.getElementById('clubTableContainer');
//     let tableHTML = `<table><tr><th>Club Name</th><th>Registration Officer</th><th>Mobile</th><th>Phone</th><th>Email</th><th>Fax</th></tr>`;
//     club.forEach(c => {
//         tableHTML += `<tr>
//             <td contenteditable="true">${c.clubName}</td>
//             <td contenteditable="true">${c.registrationOfficer}</td>
//             <td contenteditable="true">${c.mobile}</td>
//             <td contenteditable="true">${c.phone}</td>
//             <td contenteditable="true">${c.email}</td>
//             <td contenteditable="true">${c.fax}</td>
//         </tr>`;
//     });
//     tableHTML += `</table>`;
//     tableContainer.innerHTML = tableHTML;
//     tableContainer.style.display = 'block';
// }

// function displayTeams(teams) {
//     const tableContainer = document.getElementById('teamsTableContainer');
//     let tableHTML = `<table><tr><th>Team Number</th><th>Team Name</th><th>Action</th></tr>`;
//     teams.forEach(t => {
//         tableHTML += `<tr>
//             <td contenteditable="true">${t.teamNumber}</td>
//             <td contenteditable="true">${t.teamName}</td>
//             <td><button class="deleteRow">Delete</button></td>
//         </tr>`;
//     });
//     tableHTML += `</table>`;
//     tableHTML += `<button id="addTeamRow" data-container-id="teamsTableContainer" data-headers="Team Number,Team Name">Add Row</button>`;
//     tableContainer.innerHTML = tableHTML;
//     tableContainer.style.display = 'block';

//     document.getElementById('addTeamRow').addEventListener('click', handleAddRow);
//     Array.from(document.getElementsByClassName('deleteRow')).forEach(button => {
//         button.addEventListener('click', deleteRow);
//     });
// }


// // function displayTeams(teams) {
// //     const tableContainer = document.getElementById('teamsTableContainer');
// //     let tableHTML = `<table><tr><th>Team Number</th><th>Team Name</th></tr>`;
// //     teams.forEach(t => {
// //         tableHTML += `<tr>
// //             <td contenteditable="true">${t.teamNumber}</td>
// //             <td contenteditable="true">${t.teamName}</td>
// //         </tr>`;
// //     });
// //     tableHTML += `</table>`;
// //     tableContainer.innerHTML = tableHTML;
// //     tableContainer.style.display = 'block';
// // }


// function displayHorses(horses) {
//     const tableContainer = document.getElementById('horsesTableContainer');
//     let tableHTML = `<table><tr><th>Horse Number</th><th>Horse Name</th><th>Horse Name Furigana</th><th>Horse Reg Number</th><th>Horse Sex</th><th>Horse Age</th><th>Horse Color</th><th>Horse Breed</th><th>Horse Origin</th><th>Horse Owner</th><th>Action</th></tr>`;
//     horses.forEach(h => {
//         tableHTML += `<tr>
//             <td contenteditable="true">${h.horseNumber}</td>
//             <td contenteditable="true">${h.horseName}</td>
//             <td contenteditable="true">${h.horseNameFurigana}</td>
//             <td contenteditable="true">${h.horseRegNumber}</td>
//             <td contenteditable="true">${h.horseSex}</td>
//             <td contenteditable="true">${h.horseAge}</td>
//             <td contenteditable="true">${h.horseColor}</td>
//             <td contenteditable="true">${h.horseBreed}</td>
//             <td contenteditable="true">${h.horseOrigin}</td>
//             <td contenteditable="true">${h.horseOwner}</td>
//             <td><button class="deleteRow">Delete</button></td>
//         </tr>`;
//     });
//     tableHTML += `</table>`;
//     tableHTML += `<button id="addHorseRow" data-container-id="horsesTableContainer" data-headers="Horse Number,Horse Name,Horse Name Furigana,Horse Reg Number,Horse Sex,Horse Age,Horse Color,Horse Breed,Horse Origin,Horse Owner">Add Row</button>`;
//     tableContainer.innerHTML = tableHTML;
//     tableContainer.style.display = 'block';

//     document.getElementById('addHorseRow').addEventListener('click', handleAddRow);
//     Array.from(document.getElementsByClassName('deleteRow')).forEach(button => {
//         button.addEventListener('click', deleteRow);
//     });
// }


// // function displayHorses(horses) {
// //     const tableContainer = document.getElementById('horsesTableContainer');
// //     let tableHTML = `<table><tr><th>Horse Number</th><th>Horse Name</th><th>Horse Name Furigana</th><th>Horse Reg Number</th><th>Horse Sex</th><th>Horse Age</th><th>Horse Color</th><th>Horse Breed</th><th>Horse Origin</th><th>Horse Owner</th></tr>`;
// //     horses.forEach(h => {
// //         tableHTML += `<tr>
// //             <td contenteditable="true">${h.horseNumber}</td>
// //             <td contenteditable="true">${h.horseName}</td>
// //             <td contenteditable="true">${h.horseNameFurigana}</td>
// //             <td contenteditable="true">${h.horseRegNumber}</td>
// //             <td contenteditable="true">${h.horseSex}</td>
// //             <td contenteditable="true">${h.horseAge}</td>
// //             <td contenteditable="true">${h.horseColor}</td>
// //             <td contenteditable="true">${h.horseBreed}</td>
// //             <td contenteditable="true">${h.horseOrigin}</td>
// //             <td contenteditable="true">${h.horseOwner}</td>
// //         </tr>`;
// //     });
// //     tableHTML += `</table>`;
// //     tableContainer.innerHTML = tableHTML;
// //     tableContainer.style.display = 'block';
// // }

// function displayRiders(riders) {
//     const tableContainer = document.getElementById('ridersTableContainer');
//     let tableHTML = `<table><tr><th>Rider Number</th><th>Rider Name</th><th>Rider Name Furigana</th><th>Rider Reg Number</th><th>Rider Sex</th><th>Action</th></tr>`;
//     riders.forEach(r => {
//         tableHTML += `<tr>
//             <td contenteditable="true">${r.riderNumber}</td>
//             <td contenteditable="true">${r.riderName}</td>
//             <td contenteditable="true">${r.riderNameFurigana}</td>
//             <td contenteditable="true">${r.riderRegNumber}</td>
//             <td contenteditable="true">${r.riderSex}</td>
//             <td><button class="deleteRow">Delete</button></td>
//         </tr>`;
//     });
//     tableHTML += `</table>`;
//     tableHTML += `<button id="addRiderRow" data-container-id="ridersTableContainer" data-headers="Rider Number,Rider Name,Rider Name Furigana,Rider Reg Number,Rider Sex">Add Row</button>`;
//     tableContainer.innerHTML = tableHTML;
//     tableContainer.style.display = 'block';

//     document.getElementById('addRiderRow').addEventListener('click', handleAddRow);
//     Array.from(document.getElementsByClassName('deleteRow')).forEach(button => {
//         button.addEventListener('click', deleteRow);
//     });
// }

// // function displayRiders(riders) {
// //     const tableContainer = document.getElementById('ridersTableContainer');
// //     let tableHTML = `<table><tr><th>Rider Number</th><th>Rider Name</th><th>Rider Name Furigana</th><th>Rider Reg Number</th><th>Rider Sex</th></tr>`;
// //     riders.forEach(r => {
// //         tableHTML += `<tr>
// //             <td contenteditable="true">${r.riderNumber}</td>
// //             <td contenteditable="true">${r.riderName}</td>
// //             <td contenteditable="true">${r.riderNameFurigana}</td>
// //             <td contenteditable="true">${r.riderRegNumber}</td>
// //             <td contenteditable="true">${r.riderSex}</td>
// //         </tr>`;
// //     });
// //     tableHTML += `</table>`;
// //     tableContainer.innerHTML = tableHTML;
// //     tableContainer.style.display = 'block';
// // }

//////////////////////////////////////////////////////////////////////////////





////// 1532 ///////


 have this table data cell.
<td><select class="riderSex" required>
                                    <option value="" disabled selected>性別</option>
                                    <option value="女子">女子</option>
                                    <option value="男子">男子</option>
                                </select></td>



    const data = rows.map(row => {
            cells = Array.from(row.cells);            
            return cells.reduce((obj, cell, index) => {
                obj[headers[index]] = cell.textContent.trim();
                return obj;
            }, {});
        });

the above code records the value as follows: 

riderSex: '性別\n                                    女子\n                                    男子'

how can i fix it?

/////////////////////////////////////////////////////////

function validateRow(row) {
    const cells = row.querySelectorAll('td');
    for (let cell of cells) {
        if (cell.textContent.trim() === '') {
            return false;
        }
    }
    return true;
}

this function cheks if all contenteditable="true" cells have been filled in. but, some cells have the following:
<td><select class="riderSex" required>
                                    <option value="" disabled selected>性別</option>
                                    <option value="女子">女子</option>
                                    <option value="男子">男子</option>
                                </select></td>
change the function so that it also checks that a selection has been made. 




Number,teamName,scheduleNumber,scheduleDate,category,eventCode,eventName,priceCode,riderName,riderRegNumber,horseName,horseRegNumber,comment"


//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

document.getElementById('updateButton').addEventListener('click', function() {
    const tableContainers = ['clubTableContainer', 'teamsTableContainer', 'horsesTableContainer', 'ridersTableContainer'];
    const updatedData = {};
    let isEmptyTable = false;
    tableContainers.forEach(containerId => {
        const tableName = containerId.replace(/TableContainer/i, '');  // 'i' makes it case-insensitive
        if (tableName == 'club') {
            headers = [
                "clubName",
                "registrationOfficer",
                "mobile",
                "phone",
                "email",
                "fax",
                "address"
            ]
        } else if (tableName == 'teams') {
            headers = [
                "number",
                "teamName"
            ]
        } else if (tableName == 'horses') {
            headers = [
                "number",
                "horseName",
                "horseNameFurigana",
                "horseRegNumber",
                "horseSex",
                "horseAge",
                "horseColor",
                "horseBreed",
                "horseOrigin",
                "horseOwner"
            ]
        } else if (tableName == 'riders') {
            headers = [
                "number",
                "riderName",
                "riderNameFurigana",
                "riderRegNumber",
                "riderSex"
            ]
        }
        const table = document.getElementById(containerId).querySelector('table');
        let rows = [];
        if (wasNewClubOptionSelected) {
            rows = Array.from(table.rows).slice(2); // Skip the header row dummy info row
        } else {
            rows = Array.from(table.rows).slice(1); // Skip the header row
        }
        let cells = []; 
        const data = rows.map(row => {
            if (wasNewClubOptionSelected) {
                cells = Array.from(row.cells);            
            } else {
                cells = Array.from(row.cells);//.slice(0, -1); // Exclude the last cell of each row
            }
            return cells.reduce((obj, cell, index) => {
                const select = cell.querySelector('select');
                if (select) {
                    obj[headers[index]] = select.value;
                } else {
                    obj[headers[index]] = cell.textContent.trim();
                }
                return obj;
            }, {});
        }).filter(row => !Object.values(row).some(value => value === ''));
        if (data.length === 0) {
            isEmptyTable = true;
        } else {
            updatedData[tableName] = data;
        }
    });
    if (isEmptyTable) {
        const userChoice = confirm("One or more tables have no valid data rows. Click 'Cancel' to go back and edit, or 'OK' to reload the page.");
        if (userChoice) {
            window.location.reload(); 
        } else {
            return;
        }
    } else {
        console.log('Updated Data:', updatedData);
    }
});

The code above creates a data object(?) called 'updatedData'. The html below is an example of an entry form with dropdown menus.
Create an entry <div> very similar to the below code that extracts a list of teams, horses and riders from updatedData, 
and populates the dropdown menus inside the form, so that the user can select teams, horses and riders for each event.
The events data must be handled similarly to the EventListener and loadEventCSV() below. The user chooses a number in the form,
and the form displays which event it is. The getElementById 'addEntryButton' code below shows how entries are added to the form.
In the end all the entries should be appended to the updatedData object, in the structure shown at the very bottom. 


<div class="entry">
                    <div class="entryNumberLine">
                        <div class="entryNumber">1</div>
                    </div>
                    <div class="entry-fields">
                        <div>
                            <label for="teamSelect">所属</label>
                            <select class="teamSelect" required></select>
                        </div>
                        <div>
                            <label for="scheduleNumber">競技番号</label>
                            <input type="number" class="scheduleNumber" min="1" max="999" required>
                            <span class="eventInfoDisplay"></span>
                            <div class="scheduleDate" style="display: none;"></div>
                            <div class="category" style="display: none;"></div>
                            <div class="eventCode" style="display: none;"></div>
                            <div class="eventName" style="display: none;"></div>
                            <div class="priceCode" style="display: none;"></div>
                            <div class="price" style="display: none;"></div>
                        </div>
                        <div>
                            <label for="riderSelect">選手名</label>
                            <select class="riderSelect" required></select>
                            <div class="riderSelectRegNumber" style="display: none;"></div>
                        </div>
                        <div>
                            <label for="horseSelect">馬名</label>
                            <select class="horseSelect" required></select>
                            <div class="horseSelectRegNumber" style="display: none;"></div>
                        </div>
                        <div>
                            <label for="entryComment">備考</label>
                            <textarea class="entryComment" rows="2" placeholder="選択馬場種目名：2A、OP、等"></textarea>
                        </div>
                    </div>
                </div>

////////////////////////////////////////////////////////////////////////////
                document.addEventListener('DOMContentLoaded', function() {
    fetch('仮日程.csv') // The file is in the same directory
        .then(response => {
            if (!response.ok) {
                throw new Error('Network response was not ok ' + response.statusText);
            }
            return response.text();
        })
        .then(text => {
            const lines = text.trim().split('\n');
            if (lines.length === 0) return;

            // Populate the table with data rows
            for (let i = 1; i < lines.length; i++) {
                
                const cells = lines[i].split(',');
                
                // Populate the events object
                const [scheduleNumber, scheduleDate, eventNumber, category, eventCode,
                    eventName, eventDescription, priceCode, price] = cells;

                if (scheduleDate && scheduleNumber && eventName) {
                    events[scheduleNumber.trim()] = {
                        scheduleDate: scheduleDate.trim(),
                        eventName: eventName.trim(),
                        category: category ? category.trim() : '',
                        eventCode: eventCode ? eventCode.trim() : '',
                        eventDescription: eventDescription ? eventDescription.trim() : '',
                        priceCode: priceCode ? priceCode.trim() : '',
                        price: price ? parseFloat(price.trim()) : ''
                    };
                }
            }

            console.log('Events loaded:', events); // For debugging purposes

            
        })
        .catch(error => console.error('Error loading the CSV file:', error));
});

///////////////////////////////////////
function loadEventCSV() {

    document.addEventListener('DOMContentLoaded', function() {
        fetch('仮日程.csv') //'/仮日程.csv'
            .then(response => response.text())
            .then(text => {

                const lines = text.trim().split('\n');
                lines.forEach(line => {
                    const [scheduleNumber, scheduleDate, eventNumber, category, eventCode,
                        eventName, eventDescription, priceCode, price] = line.split(',');
                if (scheduleDate && scheduleNumber && eventName) {
                    events[scheduleNumber.trim()] = {
                        scheduleDate: scheduleDate.trim(),
                        eventName: eventName.trim(),
                        category: category.trim(),
                        eventCode: eventCode.trim(),
                        eventDescription: eventDescription.trim(),
                        priceCode: priceCode.trim(),
                        price: parseFloat(price.trim())
                    };
                }
            });
            console.log('Events loaded:', events); // For debugging purposes
            })
            .catch(error => console.error('Error loading the CSV file:', error));
    });
}

document.getElementById('addEntryButton').addEventListener('click', function() {
    const eventForm = document.getElementById('eventForm');
    const entryContainer = eventForm.querySelector('.entry-container');
    const lastEntry = entryContainer ? entryContainer.lastElementChild : null;
    const errorMessage = document.getElementById('error-message-entry');

    if (lastEntry) {
        const inputs = lastEntry.querySelectorAll('input[required], select[required]');
        const isValid = validateLastInputs(inputs,errorMessage);
        if (!isValid) {
            return;
        }
    }
    const entryDiv = document.createElement('div');
    entryDiv.className = 'entry';
    const entryNumber = document.querySelectorAll('.entry').length + 1;
    let charDisplayId = 'entryNumberCharDisplay' + (entryNumber - 1);
    const entryNumberCharDisplay = document.getElementById(charDisplayId);
    entryNumberCharDisplay.textContent = 'C'.repeat(entryNumber - 1);
    charDisplayId = 'entryNumberCharDisplay' + (entryNumber);
    entryDiv.innerHTML = `
        <div class="entryNumberLine">
            <div class="entryNumber">${entryNumber}</div>
            <div id="${charDisplayId}" class="entryNumberChar">_</div>
        </div>
        <div class="entry-fields">
            <div>
                <label for="teamSelect">所属</label>
                <select class="teamSelect" required></select>
            </div>
            <div>
                <label for="scheduleNumber">競技番号</label>
                <input type="number" class="scheduleNumber" min="1" max="999" required>
                <span class="eventInfoDisplay"></span>
                <div class="scheduleDate" style="display: none;"></div>
                <div class="category" style="display: none;"></div>
                <div class="eventCode" style="display: none;"></div>
                <div class="eventName" style="display: none;"></div>
                <div class="priceCode" style="display: none;"></div>
                <div class="price" style="display: none;"></div>
            </div>
            <div>
                <label for="riderSelect">選手名</label>
                <select class="riderSelect" required></select>
                <div class="riderSelectRegNumber" style="display: none;"></div>
            </div>
            <div>
                <label for="horseSelect">馬名</label>
                <select class="horseSelect" required></select>
                <div class="horseSelectRegNumber" style="display: none;"></div>
            </div>
            <div>
                <label for="entryComment">備考</label>
                <textarea class="entryComment" rows="2" placeholder="選択馬場種目名：2A、OP、等"></textarea>
            </div>
        </div>
    `;
    if (!entryContainer) {
        const newEntryContainer = document.createElement('div');
        newEntryContainer.className = 'entry-container';
        eventForm.appendChild(newEntryContainer);
        newEntryContainer.appendChild(entryDiv);
    } else {
        entryContainer.appendChild(entryDiv);
    }
    updateSelectOptions();
});


///////////////////
{"entries": [
    {
      "number": "1",
      "teamName":"大山乗馬センター",
      "scheduleNumber": "1",
      "scheduleDate": "2024-05-16",
      "category": "2",
      "eventCode": "FS120",
      "eventName": "フレンドシップ120",
      "priceCode": "フレンドシップ",
      "riderName": "吉田 桃",
      "riderRegNumber": "32536",
      "horseName":"リグヴェーダ",
      "horseRegNumber":"58280",
      "comment": ""
    }],
    "fees": [
    {
      "feeItem": "馬",
      "feeCount": "0",
      "feeAmount": "0"
    }]}

///////////////////////////////////////////////////////////////////
html:
<form id="eventForm" style="display: none;">

js:
const eventForm = document.getElementById('eventForm');
eventForm.style.display = 'block';
        
error:
script.js:499 Uncaught TypeError: Cannot read properties of null (reading 'style')
    at HTMLButtonElement.<anonymous> (script.js:499:19)



document.querySelector("#entriesTableContainer > table > tr > td:nth-child(3)")


const riderSelects = document.querySelectorAll('.riderSelect');
    riderSelects.forEach(select => {
        const selectedValue = select.value;
        select.innerHTML = '';
        updatedData.riders.forEach(rider => {
            const option = document.createElement('option');
            option.value = rider.riderName;
            option.textContent = rider.riderName;
            option.setAttribute('data-reg-number', rider.riderRegNumber);
            select.appendChild(option);
        });
        select.value = selectedValue;
        select.addEventListener('change', function() {
            const selectedOption = select.options[select.selectedIndex];
            const regNumber = selectedOption.getAttribute('data-reg-number');
            const regNumberDiv = select.previousElementSibling;
            regNumberDiv.textContent = regNumber;
        });
        const event = new Event('change');
        select.dispatchEvent(event);
    });
the rider names and regnumbers load properply (i can see it in the generated html when i inspect in the browser).
the user must select a name, and the above function must select the corresponding regnumber. but i get an error:

script.js:744 Uncaught TypeError: Cannot read properties of undefined (reading 'getAttribute')
    at HTMLSelectElement.<anonymous> (script.js:744:46)
    at script.js:751:16
    at NodeList.forEach (<anonymous>)
    at updateSelectOptions (script.js:726:18)
    at addEntryRow (script.js:565:5)
    at HTMLButtonElement.handleAddEntryRow (script.js:510:5)
(anonymous) @ script.js:744
(anonymous) @ script.js:751
updateSelectOptions @ script.js:726
addEntryRow @ script.js:565
handleAddEntryRow @ script.js:510
script.js:746 Uncaught TypeError: Cannot set properties of null (setting 'textContent')
    at HTMLSelectElement.<anonymous> (script.js:746:72)



function addEntryRow(headers) {  
    const tableContainer = document.getElementById('entriesTableContainer');
    const table = tableContainer.querySelector('table');
    const newRow = document.createElement('tr');
    headers.forEach(header => {
        let newCell = document.createElement('td');
        if (header === 'number') {
            newCell.innerHTML = `${newRowNumbers.entries}`;
        } else if (header === 'teamName') {
            newCell.innerHTML = `<select class="teamSelect" required></select>`;
        } else if (header === 'scheduleNumber') {
            newCell.innerHTML = `<input type="number" class="scheduleNumber" min="1" max="999" required>
                                <div class="category" style="display: none;"></div>`;
        } else if (header === 'scheduleDate') {
            newCell.innerHTML = `<span class="scheduleDate"></span>`;
        } else if (header === 'eventCode') {
            newCell.innerHTML = `<span class="eventCode"></span>`;
        } else if (header === 'eventName') {
            newCell.innerHTML = `<span class="eventName"></span>`;
        } else if (header === 'priceCode') {
            newCell.innerHTML = `<span class="priceCode"></span>`;
        } else if (header === 'price') {
            newCell.innerHTML = `<span class="price"></span>`;
        } else if (header === 'riderName') {
            newCell.innerHTML = `<select class="riderSelect" required></select>`;
        } else if (header === 'riderRegNumber') {
            newCell.innerHTML = `<span class="riderSelectRegNumber"></span>`;
        } else if (header === 'horseName') {
            newCell.innerHTML = `<select class="horseSelect" required></select>`;
        } else if (header === 'horseRegNumber') {
            newCell.innerHTML = `<span class="horseSelectRegNumber"></span>`;
        } else if (header === 'comment') {
            newCell.innerHTML = `<textarea class="entryComment" rows="1" cols="15" placeholder="選択：2A、OP、等"></textarea>`;
            //newCell.setAttribute('contenteditable', 'true');
        } else {
            newCell.innerHTML = ``;
        }
        newRow.appendChild(newCell);
    });
    table.appendChild(newRow);
    updateSelectOptions();
}
Created a function that checks that each cell has a valid value. entryComment can be blank. If all the values are not 
filled, if possible, place a red border around the cell that is still missing input.




